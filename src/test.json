{
  "key": "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"
}

return new Promise((resolve, reject) => {
    const pdfjsLib = window['pdfjs-dist/build/pdf'];
    pdfjsLib.GlobalWorkerOptions.workerSrc = '//mozilla.github.io/pdf.js/build/pdf.worker.js';
    pdfjsLib.getDocument(url).promise.then((pdf) => {
      const canvas = document.createElement('canvas');
      const ctx = canvas.getContext('2d');
      const imgList = [];
      for (let i = 1; i <= pdf.numPages; i++) {
        pdf.getPage(i).then((page) => {
          const viewport = page.getViewport({ scale: 1 });
          canvas.height = viewport.height;
          canvas.width = viewport.width;
          const renderContext = {
            canvasContext: ctx,
            viewport: viewport
          };
          page.render(renderContext).promise.then(() => {
            const img = canvas.toDataURL('image/jpeg');
            imgList.push(img);
            if (imgList.length === pdf.numPages) {
              resolve(imgList);
            }
          });
        });
      }
    });
  });
